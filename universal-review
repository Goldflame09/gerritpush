#!/bin/bash

###################################################################
#                                                                 #
# Created by Sniper/Goldflame09/wedgess/Papa Smurf151 for PAC-man #
#                                                                 #
###################################################################

VERSION=1.0
BUILD=1

set_up_user(){
if [ -f ${HOME}/.gerritpush/username ]; then
   GUZER=`cat ${HOME}/.gerritpush/username`
else
   echo -n "Please enter your Gerrit UserName: "; read GUZER
   echo "Your entered ${GUZER} is this correct"
   echo "Enter 1 for Yes or 2 for No"
   select correct1 in "Yes" "No"; do
   case ${correct1} in
        Yes ) mkdir -p ${HOME}/.gerritpush;
              echo ${GUZER} > ${HOME}/.gerritpush/username;
              echo "Your new gerrit username is: ${GUZER}"; break;;
        No ) echo -n "Re-Enter Gerrit UserName: "; read GUZER; echo; mkdir -p ${HOME}/.gerritpush; echo ${GUZER} > ${HOME}/.gerritpush/username; echo "Your new gerrit username is: ${GUZER}"; break;;
        *) clear; echo "Invalid Entry ${correct1}, Please enter a number between [1 - 2]"; echo; set_up_user; break;;
   esac
 done
fi
}

team() {
	if [ -f ${HOME}/.gerritpush/team ]; then
		GTEAM=`cat ${HOME}/.gerritpush/team`
		Choice=`cat ${HOME}/.gerritpush/teamchoice`
	else
		new_team
	fi
}


new_team() {
		if [ -f ${HOME}/.gerritpush/team ]; then
			DisplayTeam=`cat ${HOME}/.gerritpush/teamchoice`
			echo ""
			echo "###################################################################"
			echo ""
			echo "Your gerrit team is set to: ${DisplayTeam}"
			echo ""
			echo "###################################################################"
			echo ""
		fi
		echo "Please Select your new Gerrit Team:"
		echo "Enter the Corresponding Number"
		select NUMBER in "AOKP" "Carbon" "Chameleon OS" "CyanogenMod" "Dirty Unicorns" "Gummy" "Omni" "Paranoid Android" "PAC" "Vanir";do
		case ${NUMBER} in
			1 ) CHOICE="AOKP"; GTEAM="gerrit.aokp.co" ; break;;
			2 ) CHOICE="Carbon"; GTEAM="review.carbon-rom.com" ; break;;
			3 ) CHOICE="Chameleon"; GTEAM="review.chameleonos.org" ; break;;
			4 ) CHOICE="CyanogenMod"; GTEAM="review.cyanogenmod.org" ; break;;
			5 ) CHOICE="Dirty-Unicorns"; GTEAM="gerrit.dirtyunicorns.com" ; break;;
			6 ) CHOICE="Gummy"; GTEAM="review.gummyrom.com" ; break;;
			7 ) CHOICE="Omni"; GTEAM="gerrit.omnirom.org" ; break;;
			8 ) CHOICE="Paranoid-Android"; GTEAM="gerrit.paranoidandroid.co" ; break;;
			9 ) CHOICE="PAC"; GTEAM="review.pac-rom.com" ; break;;
			10 ) CHOICE="Vanir"; GTEAM="vaniraosp.goo.im" ; break;;
			* ) echo "Invalid Entry ${correct3}, Please enter from the options provided."; echo; echo; team; break;;
		esac
		done
	mkdir -p ${HOME}/.gerritpush; echo ${GTEAM} > ${HOME}/.gerritpush/team;
	mkdir -p ${HOME}/.gerritpush; echo ${Choice} > ${HOME}/.gerritpush/teamchoice;
	echo "Default Set to ${Choice}"
}


branch() {
	if [ -f ${HOME}/.gerritpush/branch ]; then
		BRANCH=`cat ${HOME}/.gerritpush/branch`
	else
		new_branch
	fi
}


new_branch() {
	if [ -f ${HOME}/.gerritpush/branch ]; then
		DisplayBranch1=`cat ${HOME}/.gerritpush/branch`
		echo ""
		echo "###################################################################"
		echo ""
		echo "Your current branch is set to: ${DisplayBranch1}"
		echo ""
		echo "###################################################################"
		echo ""
	fi
	team
	if [ "${Choice}" == "AOKP" ]; then
		rm -f ${HOME}/.gerritpush/branch
		echo "Please enter the branch you want to upload to:"
		echo "GH-PAGES is ONLY for PacPapers!!"
		select correct3 in "jb-mr2" "jb-mr1" "GH-PAGES"; do
		case ${correct3} in
			jb-mr2 ) BRANCH="jb-mr2"; break;;
			jb-mr1 ) BRANCH="jb-mr1"; break;;
			GH-PAGES ) BRANCH="gh-pages"; break;;
			* ) clear; echo "Invalid Entry ${correct3}, Please enter from the options provided."; echo; echo; new_branch; break;;
		esac
		done
		echo ${BRANCH} > ${HOME}/.gerritpush/branch
		echo "Your new current branch is: ${BRANCH}"
	elif [ "${Choice}" == "Carbon" ]; then
		rm -f ${HOME}/.gerritpush/branch
		echo "Please enter the branch you want to upload to:"
		echo "GH-PAGES is ONLY for PacPapers!!"
		select correct3 in "jb3" "jb2"; do
		case ${correct3} in
			jb3 ) BRANCH="jb3"; break;;
			jb2 ) BRANCH="jb2"; break;;
			* ) clear; echo "Invalid Entry ${correct3}, Please enter from the options provided."; echo; echo; new_branch; break;;
		esac
		done
		echo ${BRANCH} > ${HOME}/.gerritpush/branch
		echo "Your new current branch is: ${BRANCH}"
	elif [ "${Choice}" == "Chameleon" ]; then
		rm -f ${HOME}/.gerritpush/branch
		echo "Please enter the branch you want to upload to:"
		select correct3 in "jellybean-mr1" "jellybean-mr2.1"; do
		case ${correct3} in
			jellybean-mr1 ) BRANCH="jellybean-mr1"; break;;
			jellybean-mr2.1 ) BRANCH="jellybean-mr2.1"; break;;
			* ) clear; echo "Invalid Entry ${correct3}, Please enter from the options provided."; echo; echo; new_branch; break;;
		esac
		done
		echo ${BRANCH} > ${HOME}/.gerritpush/branch
		echo "Your new current branch is: ${BRANCH}"
	elif [ "${Choice}" == "CyanogenMod" ]; then
		rm -f ${HOME}/.gerritpush/branch
		echo "Please enter the branch you want to upload to:"
		select correct3 in "CM-10.1" "CM-10.2"; do
		case ${correct3} in
			CM-10.1 ) BRANCH="cm-10.1"; break;;
			CM-10.2 ) BRANCH="cm-10.2"; break;;
			* ) clear; echo "Invalid Entry ${correct3}, Please enter from the options provided."; echo; echo; new_branch; break;;
		esac
		done
		echo ${BRANCH} > ${HOME}/.gerritpush/branch
		echo "Your new current branch is: ${BRANCH}"
	elif [ "${Choice}" == "Dirty-Unicorns" ]; then
		rm -f ${HOME}/.gerritpush/branch
		echo "Please enter the branch you want to upload to:"
		echo "GH-PAGES & du43is ONLY for DirtWalls!!"
		select correct3 in "jb-mr2" "jb-mr1" "du43" "GH-PAGES"; do
		case ${correct3} in
			jb-mr2 ) BRANCH="jb-mr2"; break;;
			jb-mr1 ) BRANCH="jb-mr1"; break;;
			du43 ) BRANCH="du43"; break;;
			GH-PAGES ) BRANCH="gh-pages"; break;;
			* ) clear; echo "Invalid Entry ${correct3}, Please enter from the options provided."; echo; echo; new_branch; break;;
		esac
		done
		echo ${BRANCH} > ${HOME}/.gerritpush/branch
		echo "Your new current branch is: ${BRANCH}"
	elif [ "${Choice}" == "Gummy" ]; then
		rm -f ${HOME}/.gerritpush/branch
		BRANCH="jb4.3"
		echo ${BRANCH} > ${HOME}/.gerritpush/branch
		BRANCH=`cat ${HOME}/.gerritpush/branch`
		echo "Your new current branch is: ${BRANCH}"
	elif [ "${Choice}" == "Omni" ]; then
		rm -f ${HOME}/.gerritpush/branch
		BRANCH="android-4.3"
		echo ${BRANCH} > ${HOME}/.gerritpush/branch
		echo "Your new current branch is: ${BRANCH}"
	elif [ "${Choice}" == "Paranoid-Android" ]; then
		rm -f ${HOME}/.gerritpush/branch
		echo "Please enter the branch you want to upload to:"
		echo "GH-PAGES is ONLY for PacPapers!!"
		select correct3 in "CM-10.1" "CM-10.2" "GH-PAGES"; do
		case ${correct3} in
			CM-10.1 ) BRANCH="cm-10.1"; break;;
			CM-10.2 ) BRANCH="cm-10.2"; break;;
			GH-PAGES ) BRANCH="gh-pages"; break;;
			* ) clear; echo "Invalid Entry ${correct3}, Please enter from the options provided."; echo; echo; new_branch; break;;
		esac
		done
		echo ${BRANCH} > ${HOME}/.gerritpush/branch
		echo "Your new current branch is: ${BRANCH}"
	elif [ "${Choice}" == "PAC" ]; then
		rm -f ${HOME}/.gerritpush/branch
		echo "Please enter the branch you want to upload to:"
		echo "GH-PAGES is ONLY for PacPapers!!"
		select correct3 in "CM-10.1" "CM-10.2" "GH-PAGES"; do
		case ${correct3} in
			CM-10.1 ) BRANCH="cm-10.1"; break;;
			CM-10.2 ) BRANCH="cm-10.2"; break;;
			GH-PAGES ) BRANCH="gh-pages"; break;;
			* ) clear; echo "Invalid Entry ${correct3}, Please enter from the options provided."; echo; echo; new_branch; break;;
		esac
		done
		echo ${BRANCH} > ${HOME}/.gerritpush/branch
		echo "Your new current branch is: ${BRANCH}"
	elif [ "${Choice}" == "Vanir" ]; then
		rm -f ${HOME}/.gerritpush/branch
		echo "Please enter the branch you want to upload to:"
		echo "GH-PAGES is ONLY for PacPapers!!"
		select correct3 in "jb" "jb42" "jb42-master" "jb43"; do
		case ${correct3} in
			jb ) BRANCH="jb"; break;;
			jb42 ) BRANCH="jb42"; break;;
			jb42-master ) BRANCH="jb42-master"; break;;
			jb43 ) BRANCH="jb43"; break;;
			* ) clear; echo "Invalid Entry ${correct3}, Please enter from the options provided."; echo; echo; new_branch; break;;
		esac
		done
		echo ${BRANCH} > ${HOME}/.gerritpush/branch
		echo "Your new current branch is: ${BRANCH}"
fi
}


correct_commit() {
clear; echo ${MSSG}; echo
echo "Is this correct ??"
echo "Enter 1 for Yes and 2 for No"
  select correct2 in "Yes" "No"; do
   case ${correct2} in
	Yes ) echo "Commit set to ${MSSG}"; break;;
	No ) echo "Re-enter commit message"; read MSSG; break;;
	* ) clear; echo "Invalid Entry ${correct2}, Please re-try"; echo; echo; correct_commit; break ;;
   esac
  done
}


push() {
echo -n "Are you sure you want to push? (y/n): "; read RESP
if [ "${RESP}" == "y" ] || [ "${RESP}" == "Y" ]; then
	if [ -f ${HOME}/.gerritpush/branch ]; then
  	  echo "Current branch: `cat ${HOME}/.gerritpush/branch`"
  	  echo -n "Push to current branch? (y/n): "; read CTPUSH
  		if [ "${CTPUSH}" == "y" ] || [ "${CTPUSH}" == "Y" ]; then
			BRANCH=`cat ${HOME}/.gerritpush/branch`
  		else
			new_branch
  		fi
	else
	  new_branch
	fi
    PROJECT=`grep PAC-man .git/config | awk -F/ '{print $NF}'`
    git push ssh://${GUZER}@${GTEAM}:29418/${PROJECT} HEAD:refs/\for/${BRANCH}
else
  echo "Canceled"
fi
}


ap() {
git add -A
scp -p -P 29418 ${GUZER}@${GTEAM}:hooks/commit-msg .git/hooks/
   echo "Add commit message below.
--------------------------"
   read MSSG
   correct_commit
git commit -a -m "${MSSG}"
push
}


amend() {
   echo -n "Have you edited the files?/Do you want to change commit message? (y/n):"; read RESPa
if [ "${RESPa}" == "y" ] || [ "${RESPa}" == "Y" ]; then
   git add -A
   git commit --amend
   push
elif [ "${RESPa}" == "n" ] || [ "${RESPa}" == "N" ]; then
	echo "Please edit them"
	echo "Press 1 after you edit them"
	read amend1
	if [ ${amend1} == "1" ]; then
		git add -A
		git commit --amend
		push
	else
		echo "Take your time and come back when you are ready"
	fi
fi
}


author() {
echo "Please enter username of author"
echo -n "Username: "
read auser
git commit --amend --author ${auser}
}


correct_gname() {
echo "Your entered ${GUZER} is this correct?"
echo "Enter 1 for Yes and 2 for No"
   select correct1 in "Yes" "No"; do
   case ${correct1} in
	Yes ) mkdir ${HOME}/.gerritpush; echo ${GUZER} > ${HOME}/.gerritpush/username; echo "Your new gerrit username is: ${GUZER}"; break;;
	No ) echo -n "Re-Enter Gerrit UserName: "; read GUZER; echo; mkdir -p ${HOME}/.gerritpush; echo ${GUZER} > ${HOME}/.gerritpush/username; echo "Your new gerrit username is: ${GUZER}"; break;;
	* ) clear; echo "Invalid Entry ${correct1}, Please re-try"; echo; echo; correct_gname break ;;
   esac
  done
}


nameq_question() {
  select NAME in "View" "New"; do
   case ${NAME} in
      View ) if [ -f ${HOME}/.gerritpush/username ]; then
           echo "Your current gerrit username is: ${GUZER}";
	  else
	   echo "No gerrit username found..";
	  fi; break;;
      New ) echo -n "Enter your new gerrit username: "; read GUZER; correct_gname; break;;
      * ) clear; echo "${NAME} is not a valid option (Choose 1 or 2)"; nameq_question; break;;
   esac
  done
}


name() {
   echo "Enter an option:"
   echo "   1. View your current gerrit username"
   echo "   2. Enter a new gerrit username"
   echo; nameq_question
}


sshkey() {
team
echo ""
echo "Your gerrit team is set to: ${Choice}"
echo ""
echo "You will have to set this up for every Team's Gerrit"
echo "But can use the same sshkeys for all"
echo ""
if [ -e ${HOME}/.ssh/id_rsa.pub ]; then
   echo "SSH Key already exists.

Go to ${Choice} Gerrit (${GTEAM}), sign in, go to settings, 
and click on SSH Public Keys. Use Control + Click to open URL.

Click on add SSH Key and copy and paste contents of file from .ssh/id_rsa.pub."
read -p "Press [Enter] to open file..."
   gnome-open ${HOME}/.ssh/id_rsa.pub
else
   ssh-keygen
   echo "Go to ${Choice} Gerrit (${GTEAM}), sign in, go to settings, 
and click on SSH Public Keys. Use Control + Click to open URL.

Click on add SSH Key and copy and paste contents of file from .ssh/id_rsa.pub."
read -p "Press [Enter] to open file..."
   gnome-open ${HOME}/.ssh/id_rsa.pub
fi
}


new() {
   curl http:/pac-rom.com/downloads/universal-review > ${HOME}/.gerritpush/.new
   sed -i '12,132d' ${HOME}/.gerritpush/.new
   NEWB=`grep BUILD= ${HOME}/.gerritpush/.new | sed "s/BUILD=//g"`
   NEWV=`grep VERSION= ${HOME}/.gerritpush/.new | sed "s/VERSION=//g"`
}

ask_the_question() {
echo -n "Are you sure you want to update to version: ${NEWV} build: ${NEWB}? (yes/no)"
select correct4 in "Yes" "No"; do
  case ${correct4} in
      Yes ) rm -f ${HOME}/.gerritpush/universal-review; mv ${HOME}/.gerritpush/.new ${HOME}/bin/universal-review; chmod +x ${HOME}/bin/universal-review; echo; echo "Successfully updated to v${NEWV}!"; break;;
      No ) echo "Update canceled"; break ;;
      * ) clear; echo "Invalid option ${correct4}, Please try again..."; echo; ask_the_question; break;;
   esac
done
}


update() {
   new
   if [ "${BUILD}" == "${NEWB}" ]; then
      echo; echo "Already up to date (v${VERSION})"
   elif [[ "${BUILD}" != "${NEWB}" ]]; then
      ask_the_question
fi
}


uf() {
   new
   mv ${HOME}/.gerritpush/.new ${HOME}/bin/universal-review
   chmod +x ${HOME}/bin/universal-review
   echo "Forced update to v${NEWV}!"
}


install() {
	set_up_user
	team
	branch
}


error() {
echo ""
echo "###################################################################"
echo "#                      Universal Gerrit Push                      #"
echo "#                                                                 #"
echo "#       Created by Sniper/Goldflame09/wedgess/Papa Smurf151       #"
echo "#                                                                 #"
echo "#                                                                 #"
echo "###################################################################"
echo ""
echo ""
echo "###################################################################"
echo ""
	echo " "
	echo "Usage: universal-review [-short command]"
	echo "Or:    universal-review [long command]"
	echo " "
	echo ""
	echo "###################################################################"
	echo ""
	echo "                            COMMANDS:"
	echo ""
	echo "   install	(-in)   --- Intital Setup"
	echo "   team 	(-nt)   --- Change Team Gerrits"
	echo "   add+push	(-ap)  --- Add and push to gerrit"
	echo "   amend  	(-am)  --- Amend the commit and push"
	echo "   author	(-au)  --- Change author of commit"
	echo "   force	(-uf)  --- Force the script to grab a new version"
	echo "   name	(-n)   --- View or edit your gerrit username"
	echo "   branch	(-nb)  --- Choose a new branch to push to"
	echo "   push   	(-p)   --- Push to gerrit"
	echo "   sshkey 	(-ssh) --- Create/show SSH key to put on Gerrit"
	echo "   update 	(-u)   --- Check for, and download an update if one is available"
	echo " "
	echo "If you encounter problems, check if:"
	echo "   1. Your gerrit username is correct (using the name option)"
	echo "   2. Your current branch is correct"
	echo "   3. Your public ssh key is attached to your gerrit profile"
	echo " "
	echo "If you still encounter problems, ask on the official PAC-man forum at:"
	echo "http://forum.pac-rom.com . . . . Press Control + Click to open URL"
	echo " "

}

install

if [ ! -d ${HOME}/bin ]; then
	mkdir -p ${HOME}/bin
	DisplayUser=`cat ${HOME}/.gerritpush/username`
	echo "# Add ~/bin to PATH" >> ${HOME}/.bashrc
	echo "export PATH=${PATH}:~/bin" >> ${HOME}/.bashrc
fi

if [ -f ${HOME}/.gerritpush/username ]; then
	echo "Your gerrit username is: ${DisplayUser}"
fi

if [ -f ${HOME}/.gerritpush/team ]; then
	DisplayChoice=`cat ${HOME}/.gerritpush/teamchoice`
	echo "Your gerrit team is set to: ${DisplayChoice}"
fi

if [ -f ${HOME}/.gerritpush/branch ]; then
	DisplayBranch=`cat ${HOME}/.gerritpush/branch`
	echo "Your current branch is set to: ${DisplayBranch}"
fi
echo ""
echo "###################################################################"

case $1 in
   -n|name)name;;
   -nb|branch)new_branch;;
   -u|update)update;;
   -p|push)push;;
   -nt|team)new_team;;
   -in|install)install;;
   -ssh|sshkey)sshkey;;
   -ap|add+push)ap;;
   -am|amend)amend;;
   -uf|force)uf;;
   -h|help|*)error;;
esac
